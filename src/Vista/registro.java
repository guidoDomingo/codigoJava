/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Base.GUI;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Modelo.dao.Hash;
import Modelo.dto.UsuarioDTO;
import Modelo.dao.UsuarioDao;
import java.util.ArrayList;
import javax.swing.ImageIcon;

/**
 *
 * @author guido ruiz
 */
public class registro extends javax.swing.JFrame {

    /**
     * Creates new form registro
     */
    ArrayList<UsuarioDTO> lista = new ArrayList<UsuarioDTO>();
    UsuarioDao dao;
    UsuarioDTO dto;
    public registro() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Iconos/icon.png")).getImage());
        btnActualizar.setVisible(false);
//       Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
//      int height = pantalla.height;
//      int width = pantalla.width;
//      setSize(width/2, height/2);		
//
//      setLocationRelativeTo(null);		
//      setVisible(true);
        setLocationRelativeTo(null);
        dao = new UsuarioDao();
        lista = dao.TraerUsuario("getAll");
        mostrar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        cboUsuario = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cboCargo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1Usuario = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtBuscarUsuario = new javax.swing.JTextField();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusable(false);
        setPreferredSize(new java.awt.Dimension(980, 540));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Usuario:");
        jLabel1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Contraseña:");
        jLabel2.setFocusable(false);

        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("<html>Confirmar Contraseña</html>");
        jLabel3.setFocusable(false);

        txtConfirmPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Nombre");
        jLabel4.setFocusable(false);

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnRegistrar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setFocusable(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        cboUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Administrador", "Operador", " " }));
        cboUsuario.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                cboUsuarioComponentAdded(evt);
            }
        });
        cboUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboUsuarioItemStateChanged(evt);
            }
        });
        cboUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboUsuarioMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cboUsuarioMousePressed(evt);
            }
        });
        cboUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUsuarioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Cedula");
        jLabel7.setFocusable(false);

        txtCedula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Apellido");
        jLabel5.setFocusable(false);

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Direccion");
        jLabel8.setFocusable(false);

        txtDireccion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Telefono");
        jLabel9.setFocusable(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Cargo:");
        jLabel10.setFocusable(false);

        cboCargo.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                cboCargoComponentAdded(evt);
            }
        });
        cboCargo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCargoItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setText("Registro de usuario ");
        jLabel11.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 0)));

        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Correo");
        jLabel12.setFocusable(false);

        jTable1Usuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable1Usuario.setForeground(new java.awt.Color(51, 51, 51));
        jTable1Usuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Usuario", "Cedula"
            }
        ));
        jTable1Usuario.setRowHeight(30);
        jTable1Usuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1UsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1Usuario);

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Buscar usuario:");

        txtBuscarUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarUsuarioKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1))
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre)
                                    .addComponent(txtConfirmPassword)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(txtApellido)
                                    .addComponent(cboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCedula)
                                    .addComponent(txtDireccion)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel9)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel10)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(cboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                            .addComponent(txtCorreo)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(btnActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnRegistrar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(cboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtPassword))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8))
                                            .addComponent(jLabel6))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        UsuarioDao modSql = new UsuarioDao();
        UsuarioDTO mod = new UsuarioDTO();

        String pass = new String(txtPassword.getPassword());
        String passCon = new String(txtConfirmPassword.getPassword());
        String passHash = Hash.sha1(pass);
        //validar que los campos no estén vacios
        if (cboUsuario.getSelectedItem().toString() == "Seleccionar"
                || txtPassword.getText().equals("")
                || txtConfirmPassword.getText().equals("")
                || txtNombre.getText().equals("")
                || txtApellido.getText().equals("")
                || txtDireccion.getText().equals("")
                || txtTelefono.getText().equals("")
                || cboCargo.getSelectedItem().toString() == "Seleccionar"
                || txtCedula.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios, debellenar todos los campos");
        } else {//si no están vacios validar el password
            if (pass.equals(passCon)) {

                try {
                    //verificamos si el usuario ya existe en la base de datos
                    if (!modSql.existeUsuario(txtCedula.getText())) {

                        String tipo_usuario = cboUsuario.getSelectedItem().toString();
                        if (tipo_usuario.equals("Administrador")) {
                            mod.setUsusario("Administrador");
                            //cboCargo.setSelectedItem("Jefe de planta");
                        } else {
                            mod.setUsusario("Operador");
                           // cboUsuario.removeItem("Jefe de planta");
                        }

                        mod.setClave(passHash);
                        mod.setNombre(txtNombre.getText());
                        mod.setApellido(txtApellido.getText());
                        mod.setDireccion(txtDireccion.getText());
                        mod.setTelefono(txtTelefono.getText());
                        mod.setCedula(txtCedula.getText());
                        String cargo = cboCargo.getSelectedItem().toString();
                        mod.setCorreo(txtCorreo.getText());
                        
                        if (cargo.equals("Jefe de planta")) {
                            mod.setId_cargo(1);
                        } else if (cargo.equals("Mantenimiento")) {
                            mod.setId_cargo(2);
                        }

                        try {
                            if (modSql.registrar(mod)) {
                                JOptionPane.showMessageDialog(null, "El registro se guardo correctamente");
                                String mensaje = "Gracias por registrarte ahora Ingresa al sistema";
                                this.dispose();
                                //login log = new login(mensaje);
                                //log.setVisible(true);
                                //limpiar();
                            } else {
                                JOptionPane.showMessageDialog(null, "Ocurrio un error al guardar los datos");
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(registro.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }else {
                                JOptionPane.showMessageDialog(null, "Ya existe el usuario");
                            }
                } catch (SQLException ex) {
                    Logger.getLogger(registro.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
            }

        }


    }//GEN-LAST:event_btnRegistrarActionPerformed
    
    public void mostrar(){
        Object matris[][] = new Object[lista.size()][4]; 
        
        for (int i = 0; i < lista.size(); i++) {
            matris[i][0] = lista.get(i).getId();
            matris[i][1] = lista.get(i).getNombre();
            matris[i][2] = lista.get(i).getUsusario();
            matris[i][3] = lista.get(i).getCedula();
        }
        
        jTable1Usuario.setModel(new javax.swing.table.DefaultTableModel(
            matris,
            new String [] {
                "id", "Nombre", "Usuario", "Cedula"
            }
        ));
    }
    
     public void editar() {
        int f = jTable1Usuario.getSelectedRow();
        if (f >= 0) {
            int id = Integer.valueOf(jTable1Usuario.getValueAt(f, 0).toString());
            CargarDatos(id);
        } else {
            //GUI.msgAtencion(GUI.lbInfo, "Seleccionar un registro de la lista.");
        }
    }
     
     public void CargarDatos(int id) {
         
         
        if (dao == null) {
            dao = new UsuarioDao();
        }
        dto = dao.recuperarRegistro(new UsuarioDTO(id));
        if (dto != null) {
            cboCargo.removeItem("Seleccionar");
            cboCargo.removeItem("Mantenimiento");
            cboCargo.removeItem("Quimico");
            cboCargo.removeItem("Jefe de planta");
            cboUsuario.setSelectedItem(String.valueOf(dto.getUsusario()));
            txtNombre.setText(String.valueOf(dto.getNombre()));
            txtApellido.setText(String.valueOf(dto.getApellido()));
            txtCedula.setText(String.valueOf(dto.getCedula()));
            txtDireccion.setText(String.valueOf(dto.getDireccion()));
            txtCorreo.setText(String.valueOf(dto.getCorreo()));
            txtTelefono.setText(String.valueOf(dto.getTelefono()));
            cboCargo.setSelectedItem(String.valueOf(dto.getCargo()));
        } else {
            //GUI.msgError(gui.lbInfo, "Error al cargar datos");
            if (GUI.esAdmin()) {
                //GUI.adminMsg(dao.msj());
            }
        }
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //inicio.frmReg = null;
    }//GEN-LAST:event_formWindowClosing

    private void cboUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboUsuarioItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboUsuarioItemStateChanged

    private void cboUsuarioComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_cboUsuarioComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_cboUsuarioComponentAdded

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void cboCargoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_cboCargoComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCargoComponentAdded

    private void cboCargoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCargoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCargoItemStateChanged

    private void cboUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUsuarioActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        String tipo_usuario = cboUsuario.getSelectedItem().toString();
        if (tipo_usuario.equals("Administrador")) {
            cboCargo.removeItem("Seleccionar");
            cboCargo.removeItem("Mantenimiento");
            cboCargo.removeItem("Quimico");
            
            cboCargo.addItem("Seleccionar");
            cboCargo.addItem("Jefe de planta");
        } else if(tipo_usuario.equals("Operador")) {
            cboCargo.removeItem("Jefe de planta");
            cboCargo.removeItem("Seleccionar");
            
            cboCargo.addItem("Seleccionar");
            cboCargo.addItem("Mantenimiento");
            cboCargo.addItem("Quimico");
        }
    }//GEN-LAST:event_cboUsuarioActionPerformed

    private void jTable1UsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1UsuarioMouseClicked
        if(evt.getClickCount() == 2){
            //ctr.editar();
            editar();
        }
    }//GEN-LAST:event_jTable1UsuarioMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        editar();
        btnRegistrar.setVisible(false);
        btnActualizar.setVisible(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
            cboUsuario.setSelectedItem(String.valueOf("Seleccionar"));
            txtNombre.setText(String.valueOf(""));
            txtApellido.setText(String.valueOf(""));
            txtCedula.setText(String.valueOf(""));
            txtDireccion.setText(String.valueOf(""));
            txtCorreo.setText(String.valueOf(""));
            txtTelefono.setText(String.valueOf(""));
            cboCargo.setSelectedItem(String.valueOf("Seleccionar"));
            btnRegistrar.setVisible(true);
            btnActualizar.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        UsuarioDao modSql = new UsuarioDao();
        UsuarioDTO mod = new UsuarioDTO();

        String pass = new String(txtPassword.getPassword());
        String passCon = new String(txtConfirmPassword.getPassword());
        String passHash = Hash.sha1(pass);
        //validar que los campos no estén vacios
        if (cboUsuario.getSelectedItem().toString() == "Seleccionar"
                || txtPassword.getText().equals("")
                || txtConfirmPassword.getText().equals("")
                || txtNombre.getText().equals("")
                || txtApellido.getText().equals("")
                || txtDireccion.getText().equals("")
                || txtTelefono.getText().equals("")
                || cboCargo.getSelectedItem().toString() == "Seleccionar"
                || txtCedula.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios, debellenar todos los campos");
        } else {//si no están vacios validar el password
            if (pass.equals(passCon)) {

             
                    //verificamos si el usuario ya existe en la base de datos
                    

                        String tipo_usuario = cboUsuario.getSelectedItem().toString();
                        if (tipo_usuario.equals("Administrador")) {
                            mod.setUsusario("Administrador");
                        } else {
                            mod.setUsusario("Operador");
                        }

                        mod.setClave(passHash);
                        mod.setNombre(txtNombre.getText());
                        mod.setApellido(txtApellido.getText());
                        mod.setDireccion(txtDireccion.getText());
                        mod.setTelefono(txtTelefono.getText());
                        mod.setCedula(txtCedula.getText());
                        String cargo = cboCargo.getSelectedItem().toString();
                        mod.setCorreo(txtCorreo.getText());
                        
                        if (cargo.equals("Jefe de planta")) {
                            mod.setId_cargo(1);
                        } else if (cargo.equals("Mantenimiento")) {
                            mod.setId_cargo(2);
                        } else if (cargo.equals("Quimico")) {
                            mod.setId_cargo(3);
                        }
                        
                            int f = jTable1Usuario.getSelectedRow();
                            if(f >= 0) {
                                int id = Integer.valueOf(jTable1Usuario.getValueAt(f, 0).toString());
                                mod.setId(id);
                            }
                            
                        try {
                            if (modSql.actualizar(mod)) {
                                JOptionPane.showMessageDialog(null, "El registro se actualizo correctamente");
                                this.dispose();
                                //login log = new login(mensaje);
                                //log.setVisible(true);
                                //limpiar();
                            } else {
                                JOptionPane.showMessageDialog(null, "Ocurrio un error al actualizar los datos");
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(registro.class.getName()).log(Level.SEVERE, null, ex);
                        }

                 
               

            } else {
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
            }

        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        UsuarioDTO dto = new UsuarioDTO();
        UsuarioDao dao = new UsuarioDao();
        int f = jTable1Usuario.getSelectedRow();
       
        if(f >= 0) {
            int id = Integer.valueOf(jTable1Usuario.getValueAt(f, 0).toString());
            dto.setId(id);
        }
        
         if(JOptionPane.showConfirmDialog(rootPane, "Se eliminará el registro, ¿desea continuar?",
        "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
             
               if (dao.eliminar(dto)) {
                JOptionPane.showMessageDialog(null, "El registro ha sido eliminado");
                this.dispose();
                //login log = new login(mensaje);
                //log.setVisible(true);
                //limpiar();
                 } else {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al eliminar el registro");
                }
               
        }
        
       
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void cboUsuarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboUsuarioMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboUsuarioMousePressed

    private void cboUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboUsuarioMouseClicked
       
    }//GEN-LAST:event_cboUsuarioMouseClicked

    private void txtBuscarUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarUsuarioKeyReleased
        UsuarioDao dao1 = new UsuarioDao();
        ArrayList<UsuarioDTO> lista = dao1.TraerUsuario(txtBuscarUsuario.getText());
        Object matris[][] = new Object[lista.size()][4]; 
        
        for (int i = 0; i < lista.size(); i++) {
            matris[i][0] = lista.get(i).getId();
            matris[i][1] = lista.get(i).getNombre();
            matris[i][2] = lista.get(i).getUsusario();
            matris[i][3] = lista.get(i).getCedula();
        }
        
        jTable1Usuario.setModel(new javax.swing.table.DefaultTableModel(
            matris,
            new String [] {
                "id", "Nombre", "Usuario", "Cedula"
            }
        ));
    }//GEN-LAST:event_txtBuscarUsuarioKeyReleased

    private void limpiar() {

        txtPassword.setText("");
        txtConfirmPassword.setText("");
        txtNombre.setText("");
        txtCedula.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cboCargo;
    private javax.swing.JComboBox<String> cboUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1Usuario;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscarUsuario;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
